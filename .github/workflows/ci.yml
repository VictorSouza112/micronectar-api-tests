# Nome do Workflow que aparecerá na aba "Actions" do GitHub
name: Validar Testes Automatizados

# Define o gatilho (trigger) para a execução do workflow
on:
  # Executa sempre que um Pull Request for aberto ou atualizado para a branch 'develop' ou 'main'
  pull_request:
    branches: [ "main", "develop" ]

  # Permite a execução manual do workflow a partir da interface do GitHub
  workflow_dispatch:

# Define os trabalhos (jobs) a serem executados
jobs:
  # Nome do nosso job
  validar-testes:
    # O tipo de máquina virtual que o job vai rodar
    runs-on: ubuntu-latest

    # A sequência de passos que o job vai executar
    steps:
      # Passo 1: Clona o repositório para a máquina virtual do GitHub
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Java (JDK) na versão correta
      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          # Habilita o cache das dependências do Maven para acelerar futuras execuções
          cache: maven

      # Passo 3: Executa os testes usando o mesmo comando que usamos localmente
      - name: Executar testes automatizados com Maven
        run: mvn clean test

      # Passo 4 (Opcional, mas altamente recomendado): Salva o relatório de testes
      - name: Carregar Relatório do Cucumber
        # Este passo só executa se o passo anterior falhar ou for bem-sucedido (always())
        if: always()
        uses: actions/upload-artifact@v4
        with:
          # Nome do artefato que aparecerá na página do workflow
          name: cucumber-report
          # Caminho para a pasta/arquivo que queremos salvar
          path: target/cucumber-reports.html